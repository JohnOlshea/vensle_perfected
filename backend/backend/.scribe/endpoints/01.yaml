name: 'User Management'
description: |-

  APIs to manage user
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage user
      subgroup: ''
      subgroupDescription: ''
      title: 'Register user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage user
      subgroup: ''
      subgroupDescription: ''
      title: 'Login user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user/{userId}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage user
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user by ID with business details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: ''
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      userId: odit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"message":"User not found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
          access-control-allow-headers: 'Content-Type, Authorization'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          vary: Origin
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/update-profile
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage user
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: minus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: false
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      profile_picture:
        name: profile_picture
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: minus
      phone_number: odit
      address: laudantium
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/update-password
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage user
      subgroup: ''
      subgroupDescription: ''
      title: 'Change user password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      old_password:
        name: old_password
        description: ''
        required: true
        example: sapiente
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      new_password:
        name: new_password
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      new_password_confirmation:
        name: new_password_confirmation
        description: 'The value and <code>new_password</code> must match.'
        required: true
        example: accusamus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      old_password: sapiente
      new_password: voluptatem
      new_password_confirmation: accusamus
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/update-profile-picture
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage user
      subgroup: ''
      subgroupDescription: ''
      title: 'Change user password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_picture:
        name: profile_picture
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      profile_picture: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
